name: Security OWASP dependency check

on:
  workflow_call:
    inputs:
      subproject:
        required: false
        type: string

jobs:
  security-owasp-check:
    name: Security OWASP dependency check
    runs-on: ubuntu-latest
    steps:
      - name: owasp
        shell: bash
        run: |
          echo "running owasp on ${{ inputs.subproject }}"

  # trivy-scan:
  #   runs-on: ubuntu-latest
  #   # strategy:
  #   #   fail-fast: false
  #   #   matrix:
  #   #     project: ${{ inputs.subproject }}
  #   steps:
  #     - uses: actions/checkout@v3
      
  #     - name: Bash Lst Step
  #       shell: bash
  #       run: |
  #         cd .github/
  #         ls -alR

  #     - name: Pull docker image
  #       id: pull
  #       uses: ./.github/actions/ecr-image/action.yml
  #       with:
  #         project: ${{ inputs.subproject }}


  #     - name: Scan image
  #       uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.11.2
  #       with:
  #         # image-ref: 'ghcr.io/ministryofjustice/hmpps-probation-integration-services/${{ inputs.subproject }}:latest'
  #         image-ref: ${{ steps.pull.outputs.ecr }}
  #         ignore-unfixed: true
  #         severity: 'CRITICAL,HIGH'
  #         exit-code: '1'
  #         format: 'sarif'
  #         output: 'trivy-results.sarif'
  #         trivyignores: 'projects/${{ inputs.subproject }}/.trivyignore'
  #         limit-severities-for-sarif: true

  #     - name: Upload Trivy scan results to GitHub Security tab
  #       uses: github/codeql-action/upload-sarif@v2
  #       if: always()
  #       with:
  #         sarif_file: 'trivy-results.sarif'

  #     - name: Get Trivy results
  #       if: always()
  #       uses: aquasecurity/trivy-action@41f05d9ecffa2ed3f1580af306000f734b733e54 # v0.11.2
  #       with:
  #         image-ref: ${{ steps.pull.outputs.ecr }}
  #         ignore-unfixed: true
  #         severity: 'CRITICAL,HIGH'
  #         format: 'json'
  #         output: 'results.json'
  #         trivyignores: 'projects/${{ inputs.subproject }}/.trivyignore'

  #     - name: Output Trivy results
  #       if: always()
  #       run: cat results.json